using CoachApp.Services.MiddleWare;
using Xunit;

namespace CoachApp.Services.Tests
{
    public class UserControllerTests
    {
        private readonly UserServices _services;
        public UserControllerTests(UserServices services)
        {
            _services = services;
        }

        [Fact]
        public void CheckPasswordsAreTheSame_ReturnsTrue_WhenPasswordsMatch()
        {
            // Arrange
            string pw1 = "Password123!";
            string pw2 = "Password123!";

            // Act
            bool result = _services.CheckPasswordsAreTheSame(pw1, pw2);

            // Assert
            Assert.True(result);
        }

        [Fact]
        public void CheckPasswordsAreTheSame_ReturnsFalse_WhenPasswordsDoNotMatch()
        {
            // Arrange
            string pw1 = "Password123!";
            string pw2 = "DifferentPassword!";

            // Act
            bool result = _services.CheckPasswordsAreTheSame(pw1, pw2);

            // Assert
            Assert.False(result);
        }

        [Fact]
        public void CheckPasswordsAreTheSame_ReturnsTrue_WithAutoGeneratedPasswords()
        {
            // Arrange
            string pw1 = Guid.NewGuid().ToString();
            string pw2 = pw1; // same value

            // Act
            bool result = _services.CheckPasswordsAreTheSame(pw1, pw2);

            // Assert
            Assert.True(result);
        }

        [Fact]
        public void CheckPasswordsAreTheSame_ReturnsFalse_WithDifferentAutoGeneratedPasswords()
        {
            // Arrange
            string pw1 = Guid.NewGuid().ToString();
            string pw2 = Guid.NewGuid().ToString(); // different value

            // Act
            bool result = _services.CheckPasswordsAreTheSame(pw1, pw2);

            // Assert
            Assert.False(result);
        }
    }
}

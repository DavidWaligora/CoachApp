using CoachApp.DTO.User;
using CoachApp.Services.UserClientData;
using Moq;

namespace CoachApp.Services.Tests
{
    public class UserControllerTests
    {

        [Fact]
        public void CheckPasswordsAreTheSame_ReturnsTrue_WhenPasswordsMatch()
        {
            // Arrange
            string pw1 = "Password123!";
            string pw2 = "Password123!";

            // Act
            bool result = UserClientDataServices.CheckPasswordsAreTheSame(pw1, pw2);

            // Assert
            Assert.True(result);
        }

        [Fact]
        public void CheckPasswordsAreTheSame_ReturnsFalse_WhenPasswordsDoNotMatch()
        {
            // Arrange
            string pw1 = "Password123!";
            string pw2 = "DifferentPassword!";

            // Act
            bool result = UserClientDataServices.CheckPasswordsAreTheSame(pw1, pw2);

            // Assert
            Assert.False(result);
        }

        [Fact]
        public void CheckPasswordsAreTheSame_ReturnsTrue_WithAutoGeneratedPasswords()
        {
            // Arrange
            string pw1 = Guid.NewGuid().ToString();
            string pw2 = pw1; // same value

            // Act
            bool result = UserClientDataServices.CheckPasswordsAreTheSame(pw1, pw2);

            // Assert
            Assert.True(result);
        }

        [Fact]
        public void CheckPasswordsAreTheSame_ReturnsFalse_WithDifferentAutoGeneratedPasswords()
        {
            // Arrange
            string pw1 = Guid.NewGuid().ToString();
            string pw2 = Guid.NewGuid().ToString(); // different value

            // Act
            bool result = UserClientDataServices.CheckPasswordsAreTheSame(pw1, pw2);

            // Assert
            Assert.False(result);
        }

        [Fact]
        public void GetUserFromRegisterUserDTO_ValidInput_ReturnsUser()
        {
            // Arrange
            var dto = new UserRegisterDTO
            {
                FirstName = "John",
                LastName = "Doe",
                UserName = "johndoe",
                Email = "john@example.com",
                Password1 = "Blabla123*",
                Password2 = "Blabla123*",
                PhoneNumber = "1234567890"
            };

            // Act
            var result = UserClientDataServices.GetUserFromRegisterUserDTO(dto);

            // Assert
            Assert.NotNull(result);
            Assert.Equal("John", result.FirstName);
            Assert.Equal("Doe", result.LastName);
            Assert.Equal("johndoe", result.UserName);
            Assert.Equal("john@example.com", result.Email);
            Assert.Equal("1234567890", result.PhoneNumber);
        }
    }
}
